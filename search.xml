<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>c/c++贪吃蛇</title>
      <link href="/2023/02/10/2022-1-25-%E8%B4%AA%E5%90%83%E8%9B%87/"/>
      <url>/2023/02/10/2022-1-25-%E8%B4%AA%E5%90%83%E8%9B%87/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我的第一个小游戏"><a href="#这是我的第一个小游戏" class="headerlink" title="这是我的第一个小游戏"></a>这是我的第一个小游戏</h2><p>#define _CRT_SECURE_NO_WARNINGS<br>#include”snake.h”</p><p>&#x2F;&#x2F;得分<br>int score &#x3D; 0;</p><p>&#x2F;&#x2F;吃掉每一个食物的得分<br>int add &#x3D; 1;</p><p>&#x2F;&#x2F;结束的标志<br>int endStatus &#x3D; 0;</p><p>&#x2F;&#x2F;链表的头指针<br>snake_t* head &#x3D; NULL;</p><p>&#x2F;&#x2F;食物的节点指针<br>snake_t* foodNode &#x3D; NULL;</p><p>int main()<br>{<br>    int choice &#x3D; 0;</p><pre><code>//设置控制台宽高system(&quot;mode con cols=100 lines=30&quot;);//设置随机种子rand(time(NULL));//循环接受用户选择while (1)&#123;    //显示欢迎页面    choice= welcomeGame();    switch (choice)    &#123;    case 1:        //printf(&quot;开始游戏&quot;);        printMap();//打印地图        //showScoreTips();//显示提示信息        initSnake();//初始化蛇        randFood();//随机食物        //通过按键实现蛇的移动        moveKeyControl();        break;    case 2:        aboutGame();        break;    case 3:        //printf(&quot;退出游戏&quot;);        //系统提供的函数 退出程序        exit(0);        break;    default:        setColor(12);        gotoXY(45, 28);        printf(&quot;输入非法，按下回车键继续。&quot;);        //按任意键        getchar();    &#125;    //按下回车键继续    getchar();&#125;system(&quot;pause&quot;);return 0;</code></pre><p>}</p><p>&#x2F;&#x2F;设置文本的颜色<br>int setColor(int c)<br>{<br>    SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE),c);<br>    return 0;<br>}</p><p>&#x2F;&#x2F;设置光标的位置<br>int gotoXY(int x, int y)<br>{<br>    &#x2F;&#x2F;坐标结构体类型<br>    COORD c;<br>    &#x2F;&#x2F;横坐标 纵坐标<br>    c.X &#x3D; x;<br>    c.Y &#x3D; y;</p><pre><code>//STD_OUTPUT_HANDLE 表示标准输出//GetStdHandle(STD_OUTPUT_HANDLE) 获取当前标准输出句柄//c 坐标值SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), c);return 0;</code></pre><p>}</p><p>&#x2F;&#x2F;绘制字符画-蛇<br>int printfsnake(void)<br>{<br>    &#x2F;&#x2F;清屏<br>    system(“cls”);</p><pre><code>gotoXY(35, 1);setColor(6);printf(&quot;/^\\/^\\&quot;); //蛇眼睛gotoXY(34,2);printf(&quot;|__|  o|&quot;); //蛇眼睛gotoXY(33, 2);setColor(2);printf(&quot;_&quot;); gotoXY(25,3);setColor(12);printf(&quot;\\/&quot;); //蛇信gotoXY(31, 3);setColor(2);printf(&quot;/&quot;); gotoXY(37,31);setColor(6);printf(&quot;\\_/&quot;); //蛇眼睛gotoXY(41, 3);setColor(10);printf(&quot;\\&quot;); gotoXY(26,4);setColor(12);printf(&quot;\\___&quot;); //舌头gotoXY(32,4);printf(&quot;________/&quot;); gotoXY(31,4);setColor(2);printf(&quot;|&quot;); gotoXY(43,4);setColor(10);printf(&quot;\\&quot;); gotoXY(32,5);setColor(2);printf(&quot;\\______&quot;); //蛇嘴gotoXY(44,5);setColor(10);printf(&quot;\\&quot;); gotoXY(39,6);printf(&quot;|      |               \\&quot;); //下面是蛇身gotoXY(38,7);printf(&quot;/      /                 \\&quot;);gotoXY(37,8);printf(&quot;/      /                  \\ \\&quot;);gotoXY(35,9);printf(&quot;/      /                     \\  \\&quot;);gotoXY(34,10);printf(&quot;/      /                        \\  \\&quot;);gotoXY(33,11);printf(&quot;/      /            _----_         \\  \\&quot;);gotoXY(32,12);printf(&quot;/      /          _-~    ~-_          |   |&quot;);gotoXY(31,13);printf(&quot;(      (        _-~  _--_   ~-_       _/    |&quot;);gotoXY(32, 14);printf(&quot;\\      ~-___-~    _-~   ~-_    ~~_~~      /&quot;);gotoXY(33, 15);printf(&quot;~-_           _-~         ~-_        _-~&quot;);gotoXY(35,16);printf(&quot;~--______-~                ~-___-~&quot;);return 0;</code></pre><p>}</p><p>int welcomeGame()<br>{<br>    printfsnake();</p><pre><code>setColor(11);gotoXY(45,18);printf(&quot;欢迎来到贪吃蛇游戏!&quot;);int i, j;int choice;//绘制边框setColor(14);//控制行for (i = 20; i &lt;= 26; i++)&#123;    //控制列    for (j = 27; j &lt;= 74; j++)    &#123;        //输出上下边框        if (i == 20 || i == 26)        &#123;            gotoXY(j, i);            printf(&quot;-&quot;);        &#125;        //输出左右边框        if (j == 27 || j == 74)        &#123;            gotoXY(j, i);            printf(&quot;|&quot;);        &#125;        else            printf(&quot; &quot;);    &#125;&#125;//输出菜单选项//设置文本属性setColor(12);gotoXY(35, 22);printf(&quot;1.开始游戏&quot;);gotoXY(55, 22);printf(&quot;2.游戏说明&quot;);gotoXY(35, 24);printf(&quot;3.退出游戏&quot;);gotoXY(27, 27);printf(&quot;请选择[1,2,3]:&quot;);scanf(&quot;%d&quot;, &amp;choice);return choice;</code></pre><p>}</p><p>int aboutGame(void)<br>{<br>    int i &#x3D; 0,j &#x3D; 0;</p><pre><code>//清屏system(&quot;cls&quot;);//输出标题setColor(13);gotoXY(44,3);printf(&quot;游戏说明&quot;);//输出边框//控制行for (i = 6; i &lt;= 22; i++)&#123;    //控制列    for (j = 20; j &lt;= 75; j++)    &#123;        //上下边框        if (i == 6 || i == 22)        &#123;            gotoXY(j, i);            printf(&quot;=&quot;);        &#125;        //左右边框        if (j == 20 || j == 75)        &#123;            gotoXY(j, i);            printf(&quot;|&quot;);        &#125;        else            printf(&quot; &quot;);//输出空格    &#125;&#125;//输出菜单选项setColor(3);gotoXY(30, 8);printf(&quot;1.不能撞到墙，不能吃到自己&quot;);setColor(5);gotoXY(30, 11);printf(&quot;2.F1加速前进，F2减速前进&quot;);setColor(11);gotoXY(30, 14);printf(&quot;3.使用空格键暂停游戏或继续游戏&quot;);setColor(13);gotoXY(30, 17);printf(&quot;4.使用方向键控制前进的方向&quot;);setColor(14);gotoXY(30, 20);printf(&quot;5.按下ESC键退出游戏&quot;);setColor(12);gotoXY(20,24);printf(&quot;按下回车键回到主界面&quot;);getchar();//按下回车键继续return 0;</code></pre><p>}</p><p>int printMap(void)<br>{<br>    int i &#x3D; 0, j &#x3D; 0;<br>    &#x2F;&#x2F;清屏<br>    system(“cls”);</p><pre><code>//控制行for (i = 0; i &lt;= 26; i++)&#123;    //控制列    for (j = 0; j &lt;= 56; j=j+2)    &#123;        //控制光标        gotoXY(j, i);        if (0 == i || 26 == i || 0 == j || 56 == j)        &#123;            setColor(13);            printf(&quot;□&quot;);        &#125;        else        &#123;            setColor(3);            printf(&quot;■&quot;);//■        &#125;    &#125;&#125;//getchar();//按下回车键继续return 0;</code></pre><p>}</p><p>&#x2F;&#x2F;显示分数和提示信息<br>int showScoreTips(void)<br>{<br>    int highscore &#x3D; 0;</p><pre><code>//从文件中读取最高分highscore = readFile();//显示最高分setColor(3);gotoXY(64, 4);printf(&quot;※※历史最高分※※：%d&quot;,highscore);//显示当前得分setColor(14);gotoXY(64, 8);printf(&quot;※※当前得分※※：%d&quot;,score);//显示温馨提示setColor(12);gotoXY(72, 11);printf(&quot;温馨提示&quot;);//绘制上下边框setColor(10);gotoXY(60, 13);printf(&quot;==============================&quot;);gotoXY(60, 25);printf(&quot;==============================&quot;);//输出温馨提示setColor(13);gotoXY(64, 14);printf(&quot;※ 吃掉每个食物得分：%d&quot;,add);gotoXY(64, 16);printf(&quot;※ 不能撞到墙壁，不能咬到自己&quot;);gotoXY(64, 18);printf(&quot;※ F1加速前进，F2减速前进&quot;);gotoXY(64, 20);printf(&quot;※ 按下空格暂停游戏或继续游戏&quot;);gotoXY(64, 22);printf(&quot;※ 使用←→↑↓控制前进的方向&quot;);gotoXY(64, 24);printf(&quot;※ 按下ESC退出游戏&quot;);//getchar();//按下回车键继续return 0;</code></pre><p>}</p><p>&#x2F;&#x2F;从save.txt文件中读取最高分<br>int readFile(void)<br>{<br>    int ret &#x3D; -1;<br>    char buf[32];</p><pre><code>FILE* fp = NULL;//1以只读的方式打开文件夹fp = fopen(&quot;save.txt&quot;, &quot;r&quot;);if (NULL == fp)&#123;    printf(&quot;fopen failed...\n&quot;);    return 0;&#125;//2读取文件内容memset(buf, 0, sizeof(buf));ret = fread(buf, sizeof(char), sizeof(buf), fp);if (ret &lt;= 0)&#123;    printf(&quot;fread failed...\n&quot;);    return 0;&#125;//3关闭文件fclose(fp);//atoi--&gt;将字符串数字转化为数字 “123”-&gt;123return atoi(buf);</code></pre><p>}</p><p>&#x2F;&#x2F;初始化蛇<br>int initSnake(void)<br>{<br>    &#x2F;&#x2F;system(“cls”);<br>    int i &#x3D; 0;</p><pre><code>snake_t * new = NULL;snake_t * tmp = NULL;//循环创造4个节点for (i = 0; i &lt; 4; i++)&#123;    //分配空间    new = malloc(sizeof(snake_t));    if (NULL == new)    &#123;        printf(&quot;malloc initSnake failed...\n&quot;);        return -1;    &#125;    memset(new, 0, sizeof(snake_t));    //赋值    new-&gt;x = 24 + i * 2;    new-&gt;y = 5;    //头插法    new-&gt;next = head;    head = new;&#125;//遍历链表tmp = head;while (tmp != NULL)&#123;    //设置蛇的颜色 14 黄色    setColor(14);    //定位光标    gotoXY(tmp-&gt;x, tmp-&gt;y);    if (tmp == head)    &#123;        printf(&quot;●&quot;); //●    &#125;    printf(&quot;★&quot;);//★    tmp = tmp-&gt;next;&#125;return 0;</code></pre><p>}</p><p>&#x2F;&#x2F;随机食物<br>int randFood(void)<br>{<br>    snake_t* tmp &#x3D; NULL;</p><pre><code>//随机的食物不能出现在墙壁上//随机的食物不能出现在蛇身上//随机的食物x坐标一定是偶数//分配空间foodNode = malloc(sizeof(snake_t));if (NULL == foodNode)&#123;    gotoXY(1, 28);    printf(&quot;malloc failed...&quot;);    return -1;&#125;memset(foodNode, 0, sizeof(snake_t));while (1)&#123;    while (1)    &#123;        //保证X坐标是偶数 同时不应该出现在墙上   坐标应为：（2,54）        foodNode-&gt;x = rand() % 53 + 2;        if (0 == foodNode-&gt;x % 2)            break;    &#125;    //y的坐标是（1,25）    foodNode-&gt;y = rand() % 25 + 1;    //食物没有在蛇身上    if (NULL == tmp)    &#123;        gotoXY(foodNode-&gt;x, foodNode-&gt;y);        setColor(12);        printf(&quot;●&quot;);        break;    &#125;    else    &#123;        continue;    &#125;&#125;//getchar();//按下回车键继续return 0;</code></pre><p>}</p><p>int moveSnake(void)<br>{<br>    snake_t* new &#x3D; NULL;<br>    snake_t* tmp &#x3D; NULL;<br>    snake_t* save &#x3D; NULL;</p><pre><code>new = malloc(sizeof(snake_t));if (NULL == new)&#123;    printf(&quot;malloc failed...\n&quot;);    return -1;&#125;memset(new, 0, sizeof(snake_t));//向上移动if (UP == direction)&#123;    new-&gt;x = head-&gt;x;    new-&gt;y = head-&gt;y - 1;&#125;//向下移动if (DOWN == direction)&#123;    new-&gt;x = head-&gt;x;    new-&gt;y = head-&gt;y + 1;&#125;//向右移动if (RIGHT == direction)&#123;    new-&gt;x = head-&gt;x + 2;    new-&gt;y = head-&gt;y;&#125;//向左移动if (LEFT == direction)&#123;    new-&gt;x = head-&gt;x - 2;    new-&gt;y = head-&gt;y;&#125;new-&gt;next = head;head = new;tmp = head;setColor(14);//判断是否为食物if ((new-&gt;x == foodNode-&gt;x) &amp;&amp; (new-&gt;y == foodNode-&gt;y))&#123;    //循环画出蛇    while (NULL != tmp) &#123;        gotoXY(tmp-&gt;x, tmp-&gt;y);        if (tmp == head)            printf(&quot;●&quot;);        else            printf(&quot;★&quot;);        tmp = tmp-&gt;next;    &#125;    //吃掉一个食物 增加分数    score = score + add;    //再随机食物    randFood();&#125;else&#123;    while (NULL != tmp-&gt;next)    &#123;        gotoXY(tmp-&gt;x, tmp-&gt;y);        if (tmp == head)            printf(&quot;●&quot;);        else            printf(&quot;★&quot;);        save = tmp;        tmp = tmp-&gt;next;    &#125;    //将最后一个节点释放    gotoXY(tmp-&gt;x, tmp-&gt;y);    setColor(3);    printf(&quot;■&quot;);    save-&gt;next = NULL;    free(tmp);&#125;return 0;</code></pre><p>}</p><p>int moveKeyControl(void)<br>{<br>    direction &#x3D; RIGHT;</p><pre><code>while (1)&#123;    showScoreTips();    //向上    if (GetAsyncKeyState(VK_UP) &amp;&amp; direction != DOWN)    &#123;        direction = UP;    &#125;    //向下    if (GetAsyncKeyState(VK_DOWN) &amp;&amp; direction != UP)    &#123;        direction = DOWN;    &#125;    //向左    if (GetAsyncKeyState(VK_LEFT) &amp;&amp; direction != RIGHT)//GetAsyncKeyState获取键盘输入信息    &#123;        direction = LEFT;    &#125;    //向右    if (GetAsyncKeyState(VK_RIGHT) &amp;&amp; direction != LEFT)    &#123;        direction = RIGHT;    &#125;    //按下空格键暂停游戏或继续游戏    if (GetAsyncKeyState(VK_SPACE))    &#123;        while (1)        &#123;            Sleep(300);            if (GetAsyncKeyState(VK_SPACE))                break;        &#125;    &#125;    //按下F1键加速    if (GetAsyncKeyState(VK_F1))    &#123;        //减少睡眠的时间 但睡眠时间不少于50ms        speedUp();    &#125;    //按下F2键加速    if (GetAsyncKeyState(VK_F2))    &#123;        //增加睡眠的时间 但睡眠时间不大于350ms        speedDown();    &#125;    //按下ESC键结束游戏    if (GetAsyncKeyState(VK_ESCAPE))    &#123;        //表示用户按下ESC键结束游戏        endStatus = 3;        endGame();        //exit(1);        break;    &#125;    Sleep(sleepTime);    moveSnake();    //判断是否撞到墙    if (isHitWall())    &#123;        endStatus = 1;        endGame();        break;    &#125;    //判断是否咬到自己    if (isBitSelf())    &#123;        endStatus = 2;        endGame();        break;    &#125;&#125;getchar();return 0;</code></pre><p>}</p><p>&#x2F;&#x2F;加速蛇的移动<br>int speedUp(void)<br>{<br>    &#x2F;&#x2F;最快的速度 睡眠时间50ms<br>    while (sleepTime &gt; 50)<br>    {<br>        sleepTime &#x3D; sleepTime - 20;<br>        add &#x3D; add + 2;<br>    }</p><pre><code>return 0;</code></pre><p>}</p><p>&#x2F;&#x2F;减速蛇的移动<br>int speedDown(void)<br>{<br>    if (sleepTime &lt; 350)<br>    {<br>        sleepTime &#x3D; sleepTime + 20;<br>        &#x2F;&#x2F;减少增加的分数<br>        add &#x3D; add - 2;<br>    }</p><pre><code>if (add &lt;= 0)&#123;    add = 1;&#125;return 0;</code></pre><p>}</p><p>&#x2F;&#x2F;判断是否撞墙 撞墙返回1 否则返回0<br>int isHitWall()<br>{<br>    &#x2F;&#x2F;表示撞到墙壁<br>    if (head-&gt;x &#x3D;&#x3D; 0 || head-&gt;x &#x3D;&#x3D; 56 || head-&gt;y &#x3D;&#x3D; 0 || head-&gt;y &#x3D;&#x3D; 26)<br>    {<br>        return 1;<br>    }</p><pre><code>//表示没有撞到墙壁return 0;</code></pre><p>}</p><p>&#x2F;&#x2F;判断是否咬到自己 咬到自己返回1 否则返回0<br>int isBitSelf()<br>{<br>    snake_t* tmp &#x3D; NULL;</p><pre><code>//从第二个节点开始算tmp = head-&gt;next;while (NULL != tmp)&#123;    if ((head-&gt;x == tmp-&gt;x) &amp;&amp; (head-&gt;y == tmp-&gt;y))    &#123;        return 1;    &#125;    //指向下一个节点    tmp = tmp-&gt;next;&#125;return 0;</code></pre><p>}</p><p>&#x2F;&#x2F;游戏失败边框<br>void failGameUi()<br>{<br>    int i &#x3D; 0;</p><pre><code>//清屏system(&quot;cls&quot;);//显示游戏失败提示setColor(12);gotoXY(44, 3);printf(&quot;游 戏 失 败！&quot;);//设置边框的颜色setColor(11);gotoXY(17, 5);//绘制上边框printf(&quot;+----------------------------------------------------------------+&quot;);//绘制下边框gotoXY(17, 20);printf(&quot;+----------------------------------------------------------------+&quot;);//绘制左右边框for(i = 6; i &lt;= 19; i++)&#123;    gotoXY(17, i);    printf(&quot;|&quot;);    gotoXY(82, i);    printf(&quot;|&quot;);&#125;</code></pre><p>}</p><p>&#x2F;&#x2F;结束游戏<br>int endGame(void)<br>{<br>    int n;<br>    int highScore &#x3D; 0;</p><pre><code>while (1)&#123;    //显示游戏失败界面    failGameUi();    setColor(12);    gotoXY(38, 9);    //不同的状态 显示不同的失败提示 endStatus    switch (endStatus)    &#123;        //撞到墙壁    case 1:        printf(&quot;您撞到墙壁了，游戏结束！&quot;);        break;        //咬到自己    case 2:        printf(&quot;您咬到蛇身了，游戏结束！&quot;);        break;        //按下ESC键    case 3:        printf(&quot;您已经结束了游戏，游戏结束！&quot;);        break;    default:        break;    &#125;    //显示您的得分    setColor(13);    gotoXY(43, 12);    printf(&quot;您的得分：%d&quot;, score);    //显示最高分    //从文件中读取最高分    highScore = readFile();    if (score &gt; highScore)    &#123;        setColor(10);        gotoXY(38, 16);        printf(&quot;恭喜您，您已经破纪录了！&quot;);        //将最高分写入文件        writeFile(score);    &#125;    else    &#123;        setColor(10);        gotoXY(38, 16);        printf(&quot;加油哦，离最高分还差%d分&quot;, highScore - score);    &#125;    //输出用户选择的信息    gotoXY(25, 23);    setColor(12);    printf(&quot;再玩一局请输入：1&quot;);    gotoXY(52, 23);    printf(&quot;直接退出请输入：2&quot;);    gotoXY(46, 25);    setColor(11);    printf(&quot;请选择：&quot;);    scanf(&quot;%d&quot;, &amp;n);    getchar();    if (n == 1)    &#123;        score = 0;        sleepTime = 350;        add = 1;        destorySnake();        break;    &#125;    else if(n==2)    &#123;        exit(0);    &#125;    else    &#123;        setColor(12);        gotoXY(30, 27);        printf(&quot;您输入有误，请重新输入，按下回车继续...&quot;);        getchar();        //system(&quot;cls&quot;);    &#125;&#125;return 0;</code></pre><p>}</p><p>int writeFile(int score)<br>{<br>    FILE* fp &#x3D; NULL;</p><pre><code>//打开文件fp = fopen(&quot;save.txt&quot;, &quot;w+&quot;);if (NULL == fp)&#123;    printf(&quot;打开文件失败\n&quot;);    return -1;&#125;//将最高分写入文件中fprintf(fp, &quot;%d&quot;, score);//关闭文件fclose(fp);return 0;</code></pre><p>}</p><p>int destorySnake(void)<br>{<br>    snake_t* tmp &#x3D; NULL;<br>    snake_t* save &#x3D; NULL;</p><pre><code>tmp = head;while (NULL != tmp)&#123;    save = tmp-&gt;next;    free(tmp);    tmp = save;&#125;head = NULL;return 0;</code></pre><p>}</p><h2 id="End-By-siren"><a href="#End-By-siren" class="headerlink" title="End! By siren."></a>End! By siren.</h2>]]></content>
      
      
      <categories>
          
          <category> c/c++ </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2023/02/08/2023-2-8-%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2023/02/08/2023-2-8-%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我的第一篇文章"><a href="#这是我的第一篇文章" class="headerlink" title="这是我的第一篇文章"></a>这是我的第一篇文章</h2><p>let me begin<br>this is my first blog<br>i just want to have a try<br>so…<br>let us go!</p>]]></content>
      
      
      <categories>
          
          <category> 随想 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
