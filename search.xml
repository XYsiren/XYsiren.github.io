<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2023/02/27/2023-2-27-%E5%A4%A9%E5%A4%A9%E9%85%B7%E8%B7%91/"/>
      <url>/2023/02/27/2023-2-27-%E5%A4%A9%E5%A4%A9%E9%85%B7%E8%B7%91/</url>
      
        <content type="html"><![CDATA[<p>@c&#x2F;c++图形化界面小游戏</p><h1 id="天天酷跑"><a href="#天天酷跑" class="headerlink" title="天天酷跑"></a>天天酷跑</h1><p>这是siren第一次编写基于 <strong>“easyx”图形库</strong> 的小游戏。如果你想学习如何使用各种图形库或者其他引擎来编写自己的小游戏, 可以仔细阅读这篇文章，了解一下基本知识。</p><h2 id="开发日志"><a href="#开发日志" class="headerlink" title="开发日志"></a>开发日志</h2><ol><li>创建项目</li><li>导入素材</li><li>创建游戏界面<br>从用户界面入手</li></ol><p>选择图形库或者其他引擎，酷跑是基于“easyx”图形库的<br>1）创建游戏窗口<br>2）设计游戏背景<br>    a.三重背景不同的速度移动<br>    b.循环滚动背景的实现<br>3)实现游戏背景<br>    a.加载背景资源<br>    b.渲染（实现打印图片的效果）背景知识：坐标<br>    遇到的问题：背景图片的png格式图片出现黑色<br>4.实现玩家奔跑<br>5.实现玩家跳跃<br>6.实现随机小乌龟<br>7.创建结构体结构类型<br>8.使用障碍物结构体后重新初始化<br>9.封装后多个障碍物的显示<br>10.实现玩家的下蹲技能<br>11.添加柱子障碍物</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//#undef UNICODE</span></span><br><span class="line"><span class="comment">//#undef _UNICODE</span></span><br><span class="line"></span><br><span class="line">#include &lt;stdio.<span class="property">h</span>&gt;</span><br><span class="line">#include &lt;graphics.<span class="property">h</span>&gt;</span><br><span class="line">#include &lt;conio.<span class="property">h</span>&gt;</span><br><span class="line">#include &lt;vector&gt; <span class="comment">//c++ 长度可变的数组</span></span><br><span class="line">#include <span class="string">&quot;tools.h&quot;</span></span><br><span class="line"></span><br><span class="line">using namespace std; <span class="comment">//声明命名空间</span></span><br><span class="line">#define <span class="variable constant_">WIN_SCORE</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line">#define <span class="variable constant_">WIN_WIDTH</span> <span class="number">1012</span> <span class="comment">//定义宏 便于后期维护与处理</span></span><br><span class="line">#define <span class="variable constant_">WIN_HEIGHT</span> <span class="number">396</span></span><br><span class="line">#define <span class="variable constant_">OBSTACLE_COUNT</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable constant_">IMAGE</span> imgBgs[<span class="number">3</span>];<span class="comment">//背景图片——创建图片数组</span></span><br><span class="line">int bgX[<span class="number">3</span>];<span class="comment">//背景图片的X坐标（不断变化）</span></span><br><span class="line">int bgSpeed[<span class="number">3</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span> &#125;;<span class="comment">//控制3个背景不同速度</span></span><br><span class="line"></span><br><span class="line"><span class="variable constant_">IMAGE</span> imgHeros[<span class="number">12</span>];<span class="comment">//人物不断奔跑的实现</span></span><br><span class="line">int heroX;<span class="comment">//玩家的X坐标</span></span><br><span class="line">int heroY;<span class="comment">//玩家的Y坐标</span></span><br><span class="line">int heroIndex;<span class="comment">//玩家奔跑的图片帧序号</span></span><br><span class="line"></span><br><span class="line">bool heroJump;<span class="comment">//表示玩家正在跳跃</span></span><br><span class="line">int jumpHeightMax;<span class="comment">//跳跃的最大高度</span></span><br><span class="line">int heroJumpOff;<span class="comment">//跳跃偏移量</span></span><br><span class="line">int update;<span class="comment">//表示是否需要马上刷新画面</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//IMAGE imgTortoise; //小乌龟</span></span><br><span class="line"><span class="comment">//int torToiseX; //小乌龟的水平坐标</span></span><br><span class="line"><span class="comment">//int torToiseY; //小乌龟的竖直坐标</span></span><br><span class="line"><span class="comment">//bool torToiseExist; //当前窗口是否有小乌龟</span></span><br><span class="line"></span><br><span class="line">int heroBlood; <span class="comment">//定义玩家血量</span></span><br><span class="line">int score;</span><br><span class="line"></span><br><span class="line">typedef enum &#123;</span><br><span class="line"><span class="variable constant_">TORTOISE</span>, <span class="comment">//乌龟 0</span></span><br><span class="line"><span class="variable constant_">LION</span>, <span class="comment">//狮子 1</span></span><br><span class="line"><span class="title class_">HOOK1</span>,</span><br><span class="line"><span class="title class_">HOOK2</span>,</span><br><span class="line"><span class="title class_">HOOK3</span>,</span><br><span class="line"><span class="title class_">HOOK4</span>,</span><br><span class="line"><span class="variable constant_">OBSTACLE_TYPE_COUNT</span> <span class="comment">//边界 6</span></span><br><span class="line">&#125;obstacle_type;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 相当于 IMAGE obstacleImgs[3][5]</span></span><br><span class="line">vector&lt;vector&lt;<span class="variable constant_">IMAGE</span>&gt;&gt;obstacleImgs; <span class="comment">//二维数组 存放所有障碍物的各个图片</span></span><br><span class="line"></span><br><span class="line">typedef struct obstacle &#123;</span><br><span class="line">int type; <span class="comment">//障碍物的类型</span></span><br><span class="line">int imgIndex; <span class="comment">//当前显示的图片的序号</span></span><br><span class="line">int x, y; <span class="comment">//障碍物的坐标</span></span><br><span class="line">int speed;</span><br><span class="line">int power; <span class="comment">//杀伤力</span></span><br><span class="line">bool exist;</span><br><span class="line">bool hited;  <span class="comment">//表示是否已经发生碰撞</span></span><br><span class="line">bool passed;<span class="comment">//表示是否已经被通过</span></span><br><span class="line">&#125;obstacle_t;</span><br><span class="line"></span><br><span class="line">obstacle_t obstacles[<span class="variable constant_">OBSTACLE_COUNT</span>];</span><br><span class="line">int lastObsIndex;<span class="comment">//解决障碍物bug（柱子与狮子在一起）</span></span><br><span class="line"></span><br><span class="line"><span class="variable constant_">IMAGE</span> imgHeroDown[<span class="number">2</span>];</span><br><span class="line">bool heroDown; <span class="comment">//表示玩家是否处于下蹲状态</span></span><br><span class="line"></span><br><span class="line"><span class="variable constant_">IMAGE</span> imgSZ[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//游戏的初始化</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">init</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="comment">//创建游戏窗口</span></span><br><span class="line"><span class="title function_">initgraph</span>(<span class="variable constant_">WIN_WIDTH</span>, <span class="variable constant_">WIN_HEIGHT</span>, <span class="variable constant_">EW_SHOWCONSOLE</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//加载背景资源</span></span><br><span class="line">char name[<span class="number">64</span>];</span><br><span class="line"><span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//路径 &quot;res/bg001.png&quot; &quot;res/bg002.png&quot; &quot;res/bg003.png&quot;</span></span><br><span class="line"><span class="title function_">sprintf</span>(name, <span class="string">&quot;res/bg%03d.png&quot;</span>,i+<span class="number">1</span>);<span class="comment">//%03d占3位，不足3位自动补0</span></span><br><span class="line"><span class="comment">//#undef _UNICODE  </span></span><br><span class="line"><span class="title function_">loadimage</span>(&amp;imgBgs[i], name);<span class="comment">//把3个图片加载到了图片数组的位置</span></span><br><span class="line"></span><br><span class="line">bgX[i] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//加载Hero奔跑的图片帧素材</span></span><br><span class="line"><span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++) &#123;</span><br><span class="line"><span class="title function_">sprintf</span>(name, <span class="string">&quot;res/hero%d.png&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line"><span class="title function_">loadimage</span>(&amp;imgHeros[i], name);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//设置玩家的初始位置</span></span><br><span class="line">heroX = <span class="variable constant_">WIN_WIDTH</span> * <span class="number">0.5</span> - imgHeros[<span class="number">0</span>].<span class="title function_">getwidth</span>() * <span class="number">0.5</span>;<span class="comment">//X坐标：屏幕宽度的一半减去人物宽度的一半</span></span><br><span class="line">heroY = <span class="number">345</span> - imgHeros[<span class="number">0</span>].<span class="title function_">getheight</span>();<span class="comment">//Y坐标：脚底坐标减去人物高度</span></span><br><span class="line">heroIndex = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">heroJump = <span class="literal">false</span>;</span><br><span class="line">jumpHeightMax = <span class="number">345</span> - imgHeros[<span class="number">0</span>].<span class="title function_">getheight</span>() - <span class="number">120</span>;</span><br><span class="line">heroJumpOff = -<span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">update = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">////加载小乌龟素材</span></span><br><span class="line"><span class="comment">//loadimage(&amp;imgTortoise, &quot;res/t1.png&quot;);</span></span><br><span class="line"><span class="comment">//torToiseExist = false;</span></span><br><span class="line"><span class="comment">//torToiseY = 345 - imgTortoise.getheight() + 5;</span></span><br><span class="line"><span class="variable constant_">IMAGE</span> imgTort;</span><br><span class="line"><span class="title function_">loadimage</span>(&amp;imgTort, <span class="string">&quot;res/t1.png&quot;</span>);</span><br><span class="line">vector&lt;<span class="variable constant_">IMAGE</span>&gt;imgTortArray;</span><br><span class="line">imgTortArray.<span class="title function_">push_back</span>(imgTort);<span class="comment">//添加图片</span></span><br><span class="line">obstacleImgs.<span class="title function_">push_back</span>(imgTortArray);</span><br><span class="line"></span><br><span class="line"><span class="variable constant_">IMAGE</span> imgLion;</span><br><span class="line">vector&lt;<span class="variable constant_">IMAGE</span>&gt;imgLionArray;</span><br><span class="line"><span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line"><span class="title function_">sprintf</span>(name, <span class="string">&quot;res/p%d.png&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line"><span class="title function_">loadimage</span>(&amp;imgLion, name);</span><br><span class="line">imgLionArray.<span class="title function_">push_back</span>(imgLion);</span><br><span class="line">&#125;</span><br><span class="line">obstacleImgs.<span class="title function_">push_back</span>(imgLionArray);</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化障碍物池</span></span><br><span class="line"><span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; <span class="variable constant_">OBSTACLE_COUNT</span>; i++) &#123;</span><br><span class="line">obstacles[i].<span class="property">exist</span> = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//加载下蹲素材</span></span><br><span class="line"><span class="title function_">loadimage</span>(&amp;imgHeroDown[<span class="number">0</span>], <span class="string">&quot;res/d1.png&quot;</span>);</span><br><span class="line"><span class="title function_">loadimage</span>(&amp;imgHeroDown[<span class="number">1</span>], <span class="string">&quot;res/d2.png&quot;</span>);</span><br><span class="line">heroDown = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//加载柱子图片</span></span><br><span class="line"><span class="variable constant_">IMAGE</span> imgH;</span><br><span class="line"><span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">vector&lt;<span class="variable constant_">IMAGE</span>&gt; imgHookArray;</span><br><span class="line"><span class="title function_">sprintf</span>(name, <span class="string">&quot;res/h%d.png&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line"><span class="title function_">loadimage</span>(&amp;imgH, name, <span class="number">63</span>, <span class="number">250</span>, <span class="literal">true</span>); <span class="comment">// 图片进行缩化</span></span><br><span class="line">imgHookArray.<span class="title function_">push_back</span>(imgH);</span><br><span class="line">obstacleImgs.<span class="title function_">push_back</span>(imgHookArray);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">heroBlood = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//预加载音效</span></span><br><span class="line"><span class="title function_">preLoadSound</span>(<span class="string">&quot;res/hit.mp3&quot;</span>);</span><br><span class="line"><span class="comment">//背景音乐</span></span><br><span class="line"><span class="title function_">mciSendString</span>(<span class="string">&quot;play res/bg.mp3 repeat&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">lastObsIndex = -<span class="number">1</span>;</span><br><span class="line">score = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//加载数字图片</span></span><br><span class="line"><span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="title function_">sprintf</span>(name, <span class="string">&quot;res/sz/%d.png&quot;</span>, i);</span><br><span class="line"><span class="title function_">loadimage</span>(&amp;imgSZ[i], name);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//随机创建障碍物</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">creatObstacle</span>(<span class="params"></span>) &#123;</span><br><span class="line">int i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="variable constant_">OBSTACLE_COUNT</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (obstacles[i].<span class="property">exist</span> == <span class="literal">false</span>) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i &gt;= <span class="variable constant_">OBSTACLE_COUNT</span>) &#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">obstacles[i].<span class="property">exist</span> = <span class="literal">true</span>;</span><br><span class="line">obstacles[i].<span class="property">hited</span> = <span class="literal">false</span>;</span><br><span class="line">obstacles[i].<span class="property">imgIndex</span> = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//obstacles[i].type = (obstacle_type)(rand() % OBSTACLE_TYPE_COUNT);</span></span><br><span class="line">obstacles[i].<span class="property">type</span> = (obstacle_type)(<span class="title function_">rand</span>() % <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果上一个障碍物是柱子，下一个是狮子，判断距离，若很近，则狮子换为乌龟</span></span><br><span class="line"><span class="keyword">if</span> (lastObsIndex &gt;= <span class="number">0</span> &amp;&amp; obstacles[lastObsIndex].<span class="property">type</span> &gt;= <span class="title class_">HOOK1</span> &amp;&amp; obstacles[lastObsIndex].<span class="property">type</span> &lt;= <span class="title class_">HOOK4</span> &amp;&amp; obstacles[i].<span class="property">type</span> == <span class="variable constant_">LION</span> &amp;&amp; obstacles[lastObsIndex].<span class="property">x</span> &gt; <span class="variable constant_">WIN_WIDTH</span> - <span class="number">500</span>) </span><br><span class="line">&#123;</span><br><span class="line">obstacles[i].<span class="property">type</span> == <span class="variable constant_">TORTOISE</span>;</span><br><span class="line">&#125;</span><br><span class="line">lastObsIndex = i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (obstacles[i].<span class="property">type</span> == <span class="title class_">HOOK1</span>) &#123; <span class="comment">//降低柱子出现的频率</span></span><br><span class="line">obstacles[i].<span class="property">type</span> += <span class="title function_">rand</span>() % <span class="number">4</span>; <span class="comment">//0-3</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">obstacles[i].<span class="property">x</span> = <span class="variable constant_">WIN_WIDTH</span>;</span><br><span class="line">obstacles[i].<span class="property">y</span> = <span class="number">345</span> + <span class="number">5</span> - obstacleImgs[obstacles[i].<span class="property">type</span>][<span class="number">0</span>].<span class="title function_">getheight</span>();</span><br><span class="line"><span class="keyword">if</span> (obstacles[i].<span class="property">type</span> == <span class="variable constant_">TORTOISE</span>) &#123;</span><br><span class="line">obstacles[i].<span class="property">speed</span> = <span class="number">0</span>;</span><br><span class="line">obstacles[i].<span class="property">power</span> = <span class="number">5</span>; <span class="comment">//随意</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (obstacles[i].<span class="property">type</span> == <span class="variable constant_">LION</span>) &#123;</span><br><span class="line">obstacles[i].<span class="property">speed</span> = <span class="number">1</span>;</span><br><span class="line">obstacles[i].<span class="property">power</span> = <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (obstacles[i].<span class="property">type</span> &gt;= <span class="title class_">HOOK1</span> &amp;&amp; obstacles[i].<span class="property">type</span> &lt;= <span class="title class_">HOOK4</span>) &#123;</span><br><span class="line">obstacles[i].<span class="property">speed</span> = <span class="number">0</span>;</span><br><span class="line">obstacles[i].<span class="property">power</span> = <span class="number">20</span>;</span><br><span class="line">obstacles[i].<span class="property">y</span> = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">obstacles[i].<span class="property">passed</span> = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">checkHit</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">for</span>(int i = <span class="number">0</span>; i &lt; <span class="variable constant_">OBSTACLE_COUNT</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (obstacles[i].<span class="property">exist</span> &amp;&amp; obstacles[i].<span class="property">hited</span> == <span class="literal">false</span>) &#123;</span><br><span class="line">int a1x, a1y, a2x, a2y;</span><br><span class="line">int off = <span class="number">30</span>;</span><br><span class="line"><span class="keyword">if</span> (!heroDown) &#123; <span class="comment">//非下蹲 奔跑 跳跃</span></span><br><span class="line">a1x = heroX + off;</span><br><span class="line">a1y = heroY + off;</span><br><span class="line">a2x = heroX + imgHeros[heroIndex].<span class="title function_">getwidth</span>() - off;</span><br><span class="line">a2y = heroY + imgHeros[heroIndex].<span class="title function_">getheight</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">a1x = heroX + off;</span><br><span class="line">a1y = <span class="number">345</span> - imgHeroDown[heroIndex].<span class="title function_">getheight</span>();</span><br><span class="line">a2x = heroX + imgHeroDown[heroIndex].<span class="title function_">getwidth</span>() - off;</span><br><span class="line">a2y = <span class="number">345</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable constant_">IMAGE</span> img = obstacleImgs[obstacles[i].<span class="property">type</span>][obstacles[i].<span class="property">imgIndex</span>]; <span class="comment">//当前障碍物类型（的第几张图片）</span></span><br><span class="line">int b1x = obstacles[i].<span class="property">x</span> + off;</span><br><span class="line">int b1y = obstacles[i].<span class="property">y</span> + off;</span><br><span class="line">int b2x = obstacles[i].<span class="property">x</span> + img.<span class="title function_">getwidth</span>() - off;</span><br><span class="line">int b2y = obstacles[i].<span class="property">y</span> + img.<span class="title function_">getheight</span>() - <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_">rectIntersect</span>(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y)) &#123;</span><br><span class="line">heroBlood -= obstacles[i].<span class="property">power</span>;</span><br><span class="line"><span class="title function_">printf</span>(<span class="string">&quot;血量剩余 %d\n&quot;</span>, heroBlood);</span><br><span class="line"><span class="title function_">playSound</span>(<span class="string">&quot;res/hit.mp3&quot;</span>);</span><br><span class="line">obstacles[i].<span class="property">hited</span> = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//让背景动起来</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">run</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">bgX[i] -= bgSpeed[i];<span class="comment">//3个背景移动的速度不同</span></span><br><span class="line"><span class="keyword">if</span> (bgX[i] &lt; -<span class="variable constant_">WIN_WIDTH</span>) &#123;</span><br><span class="line">bgX[i] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现跳跃</span></span><br><span class="line"><span class="keyword">if</span> (heroJump) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (heroY &lt; jumpHeightMax) <span class="comment">//达到最大跳跃高度 跳跃偏移量为正 向下跳跃</span></span><br><span class="line">&#123; </span><br><span class="line">heroJumpOff = <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">heroY += heroJumpOff;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (heroY &gt; <span class="number">345</span> - imgHeros[<span class="number">0</span>].<span class="title function_">getheight</span>()) <span class="comment">//到达地面 跳跃结束</span></span><br><span class="line">&#123;  </span><br><span class="line">heroJump = <span class="literal">false</span>;</span><br><span class="line">heroJumpOff = -<span class="number">4</span>; <span class="comment">// 偏移量初始化</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (heroDown) &#123; <span class="comment">//人物下蹲</span></span><br><span class="line"><span class="keyword">static</span> int count = <span class="number">0</span>;</span><br><span class="line">int delays[<span class="number">2</span>] = &#123; <span class="number">8</span>,<span class="number">30</span> &#125;; <span class="comment">//设置下蹲的时间不一样</span></span><br><span class="line">count++;</span><br><span class="line"><span class="keyword">if</span> (count &gt;= delays[heroIndex]) &#123;</span><br><span class="line">count = <span class="number">0</span>;</span><br><span class="line">heroIndex++;</span><br><span class="line"><span class="keyword">if</span> (heroIndex &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">heroIndex = <span class="number">0</span>;</span><br><span class="line">heroDown = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123; <span class="comment">//不跳跃</span></span><br><span class="line">heroIndex = (heroIndex + <span class="number">1</span>) % <span class="number">12</span>; <span class="comment">//12张图片循环播放完成一系列动作</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建障碍物</span></span><br><span class="line"><span class="keyword">static</span> int frameCount = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">static</span> int enemyFre = <span class="number">50</span>;</span><br><span class="line">frameCount++;</span><br><span class="line"><span class="keyword">if</span> (frameCount &gt; enemyFre)&#123;</span><br><span class="line">frameCount = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//if (!torToiseExist) &#123; //避免屏幕同时出现多个小乌龟</span></span><br><span class="line"><span class="comment">//torToiseExist = true;</span></span><br><span class="line"><span class="comment">//torToiseX = WIN_WIDTH;</span></span><br><span class="line"><span class="comment">//enemyFre=rand()%301+200; //每200-500帧随机出现一只龟</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">enemyFre = <span class="title function_">rand</span>() % <span class="number">50</span> + <span class="number">50</span>;</span><br><span class="line"><span class="title function_">creatObstacle</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//if (torToiseExist) &#123;</span></span><br><span class="line"><span class="comment">////更新小乌龟位置</span></span><br><span class="line"><span class="comment">//torToiseX -= bgSpeed[2];</span></span><br><span class="line"><span class="comment">//if (torToiseX &lt; -imgTortoise.getwidth()) &#123;</span></span><br><span class="line"><span class="comment">//torToiseExist = false;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//更新所有障碍物的坐标</span></span><br><span class="line"><span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; <span class="variable constant_">OBSTACLE_COUNT</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (obstacles[i].<span class="property">exist</span>) &#123;</span><br><span class="line">obstacles[i].<span class="property">x</span> -= obstacles[i].<span class="property">speed</span> + bgSpeed[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">if</span> (obstacles[i].<span class="property">x</span> &lt; -obstacleImgs[obstacles[i].<span class="property">type</span>][<span class="number">0</span>].<span class="title function_">getwidth</span>() * <span class="number">2</span>) &#123;</span><br><span class="line">obstacles[i].<span class="property">exist</span> = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">int len = obstacleImgs[obstacles[i].<span class="property">type</span>].<span class="title function_">size</span>();</span><br><span class="line">obstacles[i].<span class="property">imgIndex</span> = (obstacles[i].<span class="property">imgIndex</span> + <span class="number">1</span>) % len;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//玩家和障碍物的“碰撞检测”处理</span></span><br><span class="line"><span class="title function_">checkHit</span>();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//渲染“游戏背景”</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">updateBg</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="comment">//调整背景图片位置</span></span><br><span class="line"><span class="title function_">putimagePNG2</span>(bgX[<span class="number">0</span>], <span class="number">0</span>, &amp;imgBgs[<span class="number">0</span>]);</span><br><span class="line"><span class="title function_">putimagePNG2</span>(bgX[<span class="number">1</span>], <span class="number">119</span>, &amp;imgBgs[<span class="number">1</span>]);</span><br><span class="line"><span class="title function_">putimagePNG2</span>(bgX[<span class="number">2</span>], <span class="number">330</span>, &amp;imgBgs[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现跳跃</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">jump</span>(<span class="params"></span>) &#123;</span><br><span class="line">heroJump = <span class="literal">true</span>;</span><br><span class="line">update = <span class="literal">true</span>; <span class="comment">//未处于刷新时也能跳跃</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">down</span>(<span class="params"></span>) &#123;</span><br><span class="line">update = <span class="literal">true</span>;</span><br><span class="line">heroDown = <span class="literal">true</span>;</span><br><span class="line">heroIndex = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//处理用户按键的输入</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">keyEvent</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//char c;</span></span><br><span class="line"><span class="comment">//scanf(&quot;%c&quot;, &amp;c);   会直接阻塞程序的执行</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title class_">GetAsyncKeyState</span>(<span class="variable constant_">VK_UP</span>))&#123; <span class="comment">//虚拟键</span></span><br><span class="line"><span class="title function_">jump</span>();</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">if(kbhit())   //kbhit()判断有无键盘输入。若有按键按下，则kbhit()返回 TRUE</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">char ch = _getch();//不需要按下回车即可直接读取</span></span><br><span class="line"><span class="comment">if (ch == &#x27; &#x27;) &#123;//按下空格跳跃</span></span><br><span class="line"><span class="comment">jump();</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="title class_">GetAsyncKeyState</span>(<span class="variable constant_">VK_DOWN</span>)) &#123;</span><br><span class="line"><span class="title function_">down</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">updateEnemy</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="comment">//渲染小乌龟</span></span><br><span class="line"><span class="comment">/*if (torToiseExist) &#123;</span></span><br><span class="line"><span class="comment">putimagePNG2(torToiseX, torToiseY, WIN_WIDTH, &amp;imgTortoise);</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; <span class="variable constant_">OBSTACLE_COUNT</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (obstacles[i].<span class="property">exist</span>) &#123;</span><br><span class="line"><span class="title function_">putimagePNG2</span>(obstacles[i].<span class="property">x</span>, obstacles[i].<span class="property">y</span>, <span class="variable constant_">WIN_WIDTH</span>, &amp;obstacleImgs[obstacles[i].<span class="property">type</span>][obstacles[i].<span class="property">imgIndex</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">updateHero</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (!heroDown) &#123; <span class="comment">//不处于下蹲状态——奔跑跳跃</span></span><br><span class="line"><span class="title function_">putimagePNG2</span>(heroX, heroY, &amp;imgHeros[heroIndex]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">int y = <span class="number">345</span> - imgHeroDown[heroIndex].<span class="title function_">getheight</span>();</span><br><span class="line"><span class="title function_">putimagePNG2</span>(heroX, y, &amp;imgHeroDown[heroIndex]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">updateBloodBar</span>(<span class="params"></span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="title function_">drawBloodBar</span>(<span class="number">10</span>, <span class="number">10</span>, <span class="number">200</span>, <span class="number">10</span>, <span class="number">2</span>, <span class="variable constant_">BLUE</span>, <span class="variable constant_">DARKGRAY</span>, <span class="variable constant_">RED</span>, heroBlood / <span class="number">100.0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">checkOver</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (heroBlood &lt;= <span class="number">0</span>) &#123;</span><br><span class="line"><span class="title function_">loadimage</span>(<span class="number">0</span>, <span class="string">&quot;res/over.png&quot;</span>);</span><br><span class="line"><span class="title class_">FlushBatchDraw</span>();<span class="comment">//刷新</span></span><br><span class="line"><span class="title function_">mciSendString</span>(<span class="string">&quot;stop res / bg.mp3&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">//关掉背景音乐</span></span><br><span class="line"><span class="title function_">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//暂停之后，充币复活或者直接开始下一局</span></span><br><span class="line">heroBlood = <span class="number">100</span>;</span><br><span class="line">score = <span class="number">0</span>;</span><br><span class="line"><span class="title function_">mciSendString</span>(<span class="string">&quot;play res / bg.mp3 repeat&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">checkScore</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; <span class="variable constant_">OBSTACLE_COUNT</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (obstacles[i].<span class="property">exist</span> &amp;&amp; obstacles[i].<span class="property">passed</span> == <span class="literal">false</span> &amp;&amp; </span><br><span class="line">obstacles[i].<span class="property">x</span> + obstacleImgs[obstacles[i].<span class="property">type</span>][<span class="number">0</span>].<span class="title function_">getwidth</span>() &lt; heroX &amp;&amp; obstacles[i].<span class="property">hited</span> == <span class="literal">false</span>) </span><br><span class="line">&#123;</span><br><span class="line">score++; </span><br><span class="line">obstacles[i].<span class="property">passed</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="title function_">printf</span>(<span class="string">&quot;score:%d\n&quot;</span>, score);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">updateScore</span>(<span class="params"></span>) &#123;</span><br><span class="line">char str[<span class="number">8</span>];</span><br><span class="line"><span class="title function_">sprintf</span>(str, <span class="string">&quot;%d&quot;</span>, score);</span><br><span class="line"></span><br><span class="line">int x = <span class="number">20</span>;</span><br><span class="line">int y = <span class="number">25</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (int i = <span class="number">0</span>; str[i]; i++) &#123;</span><br><span class="line">int sz = str[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="title function_">putimagePNG</span>(x, y, &amp;imgSZ[sz]);</span><br><span class="line">x += imgSZ[sz].<span class="title function_">getwidth</span>() + <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">checkWin</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (score &gt;= <span class="variable constant_">WIN_SCORE</span>) &#123;</span><br><span class="line"><span class="title class_">FlushBatchDraw</span>();</span><br><span class="line"><span class="title function_">mciSendString</span>(<span class="string">&quot;play res/win.mp3&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="title class_">Sleep</span>(<span class="number">2000</span>);</span><br><span class="line"><span class="title function_">loadimage</span>(<span class="number">0</span>, <span class="string">&quot;res/win.png&quot;</span>);</span><br><span class="line"><span class="title class_">FlushBatchDraw</span>();</span><br><span class="line"><span class="title function_">mciSendString</span>(<span class="string">&quot;stop res/bg.mp3&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="title function_">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">heroBlood = <span class="number">100</span>;</span><br><span class="line">score = <span class="number">0</span>;</span><br><span class="line"><span class="title function_">mciSendString</span>(<span class="string">&quot;play res/bg.mp3 repeat&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int <span class="title function_">main</span>(<span class="params"><span class="keyword">void</span></span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="title function_">init</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//显示初始化面</span></span><br><span class="line"><span class="title function_">loadimage</span>(<span class="number">0</span>, <span class="string">&quot;res/over.png&quot;</span>);</span><br><span class="line"><span class="title function_">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">int timer = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line"><span class="title function_">keyEvent</span>();</span><br><span class="line">timer += <span class="title function_">getDelay</span>();<span class="comment">//此函数返回距离上一次调用间隔的时间，第一次返回0</span></span><br><span class="line"><span class="keyword">if</span> (timer &gt; <span class="number">30</span>) &#123; <span class="comment">//30毫秒刷新时间</span></span><br><span class="line">timer = <span class="number">0</span>;</span><br><span class="line">update = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (update) &#123;</span><br><span class="line">update = <span class="literal">false</span>;</span><br><span class="line"><span class="title class_">BeginBatchDraw</span>();<span class="comment">//这个函数用于开始批量绘图。执行后，任何绘图操作都将暂时不输出到绘图窗口上，直到执行 FlushBatchDraw 或 EndBatchDraw 才将之前的绘图输出。</span></span><br><span class="line"><span class="title function_">updateBg</span>();</span><br><span class="line"><span class="comment">//putimagePNG2(heroX, heroY, &amp;imgHeros[heroIndex]);</span></span><br><span class="line"><span class="title function_">updateHero</span>();</span><br><span class="line"><span class="title function_">updateEnemy</span>();</span><br><span class="line"><span class="title function_">updateBloodBar</span>();</span><br><span class="line"><span class="title function_">updateScore</span>();</span><br><span class="line"><span class="title function_">checkWin</span>();</span><br><span class="line"><span class="title class_">EndBatchDraw</span>();<span class="comment">//这个函数用于结束批量绘制，并执行未完成的绘制任务。   这两个函数主要为了消除闪烁。</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">checkOver</span>();</span><br><span class="line"><span class="title function_">checkScore</span>();</span><br><span class="line"></span><br><span class="line"><span class="title function_">run</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//Sleep(30); //休眠</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">##  tool头文件</span><br><span class="line"><span class="string">``</span><span class="string">`javascript</span></span><br><span class="line"><span class="string">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;Windows.h&gt;</span></span><br><span class="line"><span class="string">#include &quot;tools.h&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#include &lt;mmsystem.h&gt;</span></span><br><span class="line"><span class="string">#pragma comment(lib, &quot;winmm.lib&quot;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">int getDelay() &#123;</span></span><br><span class="line"><span class="string">    static unsigned long long lastTime = 0;</span></span><br><span class="line"><span class="string">    unsigned long long currentTime = GetTickCount();</span></span><br><span class="line"><span class="string">    if (lastTime == 0) &#123;</span></span><br><span class="line"><span class="string">        lastTime = currentTime;</span></span><br><span class="line"><span class="string">        return 0;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    else &#123;</span></span><br><span class="line"><span class="string">        int ret = currentTime - lastTime;</span></span><br><span class="line"><span class="string">        lastTime = currentTime;</span></span><br><span class="line"><span class="string">        return ret;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// 载入PNG图并去透明部分</span></span><br><span class="line"><span class="string">void putimagePNG(int  picture_x, int picture_y, IMAGE* picture) //x为载入图片的X坐标，y为Y坐标</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    DWORD* dst = GetImageBuffer();    // GetImageBuffer()函数，用于获取绘图设备的显存指针，EASYX自带</span></span><br><span class="line"><span class="string">    DWORD* draw = GetImageBuffer();</span></span><br><span class="line"><span class="string">    DWORD* src = GetImageBuffer(picture); //获取picture的显存指针</span></span><br><span class="line"><span class="string">    int picture_width = picture-&gt;getwidth(); //获取picture的宽度，EASYX自带</span></span><br><span class="line"><span class="string">    int picture_height = picture-&gt;getheight(); //获取picture的高度，EASYX自带</span></span><br><span class="line"><span class="string">    int graphWidth = getwidth();       //获取绘图区的宽度，EASYX自带</span></span><br><span class="line"><span class="string">    int graphHeight = getheight();     //获取绘图区的高度，EASYX自带</span></span><br><span class="line"><span class="string">    int dstX = 0;    //在显存里像素的角标</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // 实现透明贴图 公式： Cp=αp*FP+(1-αp)*BP ， 贝叶斯定理来进行点颜色的概率计算</span></span><br><span class="line"><span class="string">    for (int iy = 0; iy &lt; picture_height; iy++)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        for (int ix = 0; ix &lt; picture_width; ix++)</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            int srcX = ix + iy * picture_width; //在显存里像素的角标</span></span><br><span class="line"><span class="string">            int sa = ((src[srcX] &amp; 0xff000000) &gt;&gt; 24); //0xAArrggbb;AA是透明度</span></span><br><span class="line"><span class="string">            int sr = ((src[srcX] &amp; 0xff0000) &gt;&gt; 16); //获取RGB里的R</span></span><br><span class="line"><span class="string">            int sg = ((src[srcX] &amp; 0xff00) &gt;&gt; 8);   //G</span></span><br><span class="line"><span class="string">            int sb = src[srcX] &amp; 0xff;              //B</span></span><br><span class="line"><span class="string">            if (ix &gt;= 0 &amp;&amp; ix &lt;= graphWidth &amp;&amp; iy &gt;= 0 &amp;&amp; iy &lt;= graphHeight &amp;&amp; dstX &lt;= graphWidth * graphHeight)</span></span><br><span class="line"><span class="string">            &#123;</span></span><br><span class="line"><span class="string">                dstX = (ix + picture_x) + (iy + picture_y) * graphWidth; //在显存里像素的角标</span></span><br><span class="line"><span class="string">                int dr = ((dst[dstX] &amp; 0xff0000) &gt;&gt; 16);</span></span><br><span class="line"><span class="string">                int dg = ((dst[dstX] &amp; 0xff00) &gt;&gt; 8);</span></span><br><span class="line"><span class="string">                int db = dst[dstX] &amp; 0xff;</span></span><br><span class="line"><span class="string">                draw[dstX] = ((sr * sa / 255 + dr * (255 - sa) / 255) &lt;&lt; 16)  //公式： Cp=αp*FP+(1-αp)*BP  ； αp=sa/255 , FP=sr , BP=dr</span></span><br><span class="line"><span class="string">                    | ((sg * sa / 255 + dg * (255 - sa) / 255) &lt;&lt; 8)         //αp=sa/255 , FP=sg , BP=dg</span></span><br><span class="line"><span class="string">                    | (sb * sa / 255 + db * (255 - sa) / 255);              //αp=sa/255 , FP=sb , BP=db</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// 适用于 y &lt;0 以及x&lt;0的任何情况</span></span><br><span class="line"><span class="string">void putimagePNG2(int x, int y, IMAGE* picture) &#123;</span></span><br><span class="line"><span class="string">    IMAGE imgTmp;</span></span><br><span class="line"><span class="string">    if (y &lt; 0) &#123;</span></span><br><span class="line"><span class="string">        SetWorkingImage(picture);</span></span><br><span class="line"><span class="string">        getimage(&amp;imgTmp, 0, -y,</span></span><br><span class="line"><span class="string">            picture-&gt;getwidth(), picture-&gt;getheight() + y);</span></span><br><span class="line"><span class="string">        SetWorkingImage();</span></span><br><span class="line"><span class="string">        y = 0;</span></span><br><span class="line"><span class="string">        picture = &amp;imgTmp;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    if (x &lt; 0) &#123;</span></span><br><span class="line"><span class="string">        SetWorkingImage(picture);</span></span><br><span class="line"><span class="string">        getimage(&amp;imgTmp, -x, 0, picture-&gt;getwidth() + x, picture-&gt;getheight());</span></span><br><span class="line"><span class="string">        SetWorkingImage();</span></span><br><span class="line"><span class="string">        x = 0;</span></span><br><span class="line"><span class="string">        picture = &amp;imgTmp;</span></span><br><span class="line"><span class="string">    &#125; </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    putimagePNG(x, y, picture);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// 适用于 y &lt;0 以及y&gt;0的任何情况</span></span><br><span class="line"><span class="string">void putimagePNG2(int x, int y, int winWidth, IMAGE* picture) &#123;</span></span><br><span class="line"><span class="string">    IMAGE imgTmp;</span></span><br><span class="line"><span class="string">    if (y &lt; 0) &#123;</span></span><br><span class="line"><span class="string">        SetWorkingImage(picture);</span></span><br><span class="line"><span class="string">        getimage(&amp;imgTmp, 0, -y,</span></span><br><span class="line"><span class="string">            picture-&gt;getwidth(), picture-&gt;getheight() + y);</span></span><br><span class="line"><span class="string">        SetWorkingImage();</span></span><br><span class="line"><span class="string">        y = 0;</span></span><br><span class="line"><span class="string">        picture = &amp;imgTmp;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    if (x &lt; 0) &#123;</span></span><br><span class="line"><span class="string">        SetWorkingImage(picture);</span></span><br><span class="line"><span class="string">        getimage(&amp;imgTmp, -x, 0, picture-&gt;getwidth() + x, picture-&gt;getheight());</span></span><br><span class="line"><span class="string">        SetWorkingImage();</span></span><br><span class="line"><span class="string">        x = 0;</span></span><br><span class="line"><span class="string">        picture = &amp;imgTmp;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    else if (x &gt;= winWidth) &#123;</span></span><br><span class="line"><span class="string">        return;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    else if (x &gt; winWidth-picture-&gt;getwidth()) &#123;</span></span><br><span class="line"><span class="string">        SetWorkingImage(picture);</span></span><br><span class="line"><span class="string">        getimage(&amp;imgTmp, 0, 0, winWidth - x, picture-&gt;getheight());</span></span><br><span class="line"><span class="string">        SetWorkingImage();</span></span><br><span class="line"><span class="string">        picture = &amp;imgTmp;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    putimagePNG(x, y, picture);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//设A[x01,y01,x02,y02]  B[x11,y11,x12,y12].</span></span><br><span class="line"><span class="string">bool rectIntersect(int x01, int y01, int x02, int y02,</span></span><br><span class="line"><span class="string">    int x11, int y11, int x12, int y12)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    int zx = abs(x01 + x02 - x11 - x12);</span></span><br><span class="line"><span class="string">    int x = abs(x01 - x02) + abs(x11 - x12);</span></span><br><span class="line"><span class="string">    int zy = abs(y01 + y02 - y11 - y12);</span></span><br><span class="line"><span class="string">    int y = abs(y01 - y02) + abs(y11 - y12);</span></span><br><span class="line"><span class="string">    return  (zx &lt;= x &amp;&amp; zy &lt;= y);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">void  preLoadSound(const char* name) &#123;</span></span><br><span class="line"><span class="string">    char cmd[512];</span></span><br><span class="line"><span class="string">    sprintf_s(cmd, sizeof(cmd), &quot;open %s alias %s-1&quot;, name, name);</span></span><br><span class="line"><span class="string">    mciSendString(cmd, 0, 0, 0);</span></span><br><span class="line"><span class="string">    sprintf_s(cmd, sizeof(cmd), &quot;open %s alias %s-2&quot;, name, name);</span></span><br><span class="line"><span class="string">    mciSendString(cmd, 0, 0, 0);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">void  playSound(const char* name) &#123;</span></span><br><span class="line"><span class="string">    static int index = 1;</span></span><br><span class="line"><span class="string">    char cmd[512];</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    if (index == 1) &#123;</span></span><br><span class="line"><span class="string">        sprintf_s(cmd, sizeof(cmd), &quot;play %s-1&quot;, name);</span></span><br><span class="line"><span class="string">        mciSendString(cmd, 0, 0, 0);</span></span><br><span class="line"><span class="string">        sprintf_s(cmd, sizeof(cmd), &quot;close %s-2&quot;, name);</span></span><br><span class="line"><span class="string">        mciSendString(cmd, 0, 0, 0);</span></span><br><span class="line"><span class="string">        sprintf_s(cmd, sizeof(cmd), &quot;open %s alias %s-2&quot;, name, name);</span></span><br><span class="line"><span class="string">        mciSendString(cmd, 0, 0, 0);</span></span><br><span class="line"><span class="string">        index++;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    else if (index == 2) &#123;</span></span><br><span class="line"><span class="string">        sprintf_s(cmd, sizeof(cmd), &quot;play %s-2&quot;, name);</span></span><br><span class="line"><span class="string">        mciSendString(cmd, 0, 0, 0);</span></span><br><span class="line"><span class="string">        sprintf_s(cmd, sizeof(cmd), &quot;close %s-1&quot;, name);</span></span><br><span class="line"><span class="string">        mciSendString(cmd, 0, 0, 0);</span></span><br><span class="line"><span class="string">        sprintf_s(cmd, sizeof(cmd), &quot;open %s alias %s-1&quot;, name, name);</span></span><br><span class="line"><span class="string">        mciSendString(cmd, 0, 0, 0);</span></span><br><span class="line"><span class="string">        index = 1;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">void drawBloodBar(int x, int y, int width, int height, int lineWidth, int boardColor, int emptyColor, int fillColor, float percent) &#123;</span></span><br><span class="line"><span class="string">    LINESTYLE lineStyle;</span></span><br><span class="line"><span class="string">    getlinestyle(&amp;lineStyle);</span></span><br><span class="line"><span class="string">    int lineColor = getlinecolor();</span></span><br><span class="line"><span class="string">    int fileColor = getfillcolor();</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    if (percent &lt; 0) &#123;</span></span><br><span class="line"><span class="string">        percent = 0;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    setlinecolor(BLUE);</span></span><br><span class="line"><span class="string">    setlinestyle(PS_SOLID | PS_ENDCAP_ROUND, lineWidth);</span></span><br><span class="line"><span class="string">    setfillcolor(emptyColor);</span></span><br><span class="line"><span class="string">    fillrectangle(x, y, x + width, y + height);</span></span><br><span class="line"><span class="string">    setlinestyle(PS_SOLID | PS_ENDCAP_FLAT, 0);</span></span><br><span class="line"><span class="string">    setfillcolor(fillColor);</span></span><br><span class="line"><span class="string">    setlinecolor(fillColor);</span></span><br><span class="line"><span class="string">    if (percent &gt; 0) &#123;</span></span><br><span class="line"><span class="string">        fillrectangle(x + 0.5 * lineWidth, y + lineWidth * 0.5, x + width * percent, y + height - 0.5 * lineWidth);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    setlinecolor(lineColor);</span></span><br><span class="line"><span class="string">    setfillcolor(fillColor);</span></span><br><span class="line"><span class="string">    setlinestyle(&amp;lineStyle);</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>###如果想了解更深，欢迎访问我的博客网站<a href="https://xysiren.github.io/%EF%BC%8C%E9%87%8C%E9%9D%A2%E6%9C%89%E5%BE%88%E5%A4%9A%E6%9C%89%E8%B6%A3%E7%9A%84%E5%86%85%E5%AE%B9%EF%BC%8C%E4%B9%9F%E6%9C%89%E4%B8%80%E4%BA%9B%E6%88%91%E8%87%AA%E5%B7%B1%E7%9A%84%E6%83%B3%E6%B3%95%E5%93%A6">https://xysiren.github.io/，里面有很多有趣的内容，也有一些我自己的想法哦</a>~</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>c/c++贪吃蛇</title>
      <link href="/2023/02/10/2022-1-25-%E8%B4%AA%E5%90%83%E8%9B%87/"/>
      <url>/2023/02/10/2022-1-25-%E8%B4%AA%E5%90%83%E8%9B%87/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我的第一个小游戏"><a href="#这是我的第一个小游戏" class="headerlink" title="这是我的第一个小游戏"></a>这是我的第一个小游戏</h2><p>#define _CRT_SECURE_NO_WARNINGS<br>#include”snake.h”</p><p>&#x2F;&#x2F;得分<br>int score &#x3D; 0;</p><p>&#x2F;&#x2F;吃掉每一个食物的得分<br>int add &#x3D; 1;</p><p>&#x2F;&#x2F;结束的标志<br>int endStatus &#x3D; 0;</p><p>&#x2F;&#x2F;链表的头指针<br>snake_t* head &#x3D; NULL;</p><p>&#x2F;&#x2F;食物的节点指针<br>snake_t* foodNode &#x3D; NULL;</p><p>int main()<br>{<br>    int choice &#x3D; 0;</p><pre><code>//设置控制台宽高system(&quot;mode con cols=100 lines=30&quot;);//设置随机种子rand(time(NULL));//循环接受用户选择while (1)&#123;    //显示欢迎页面    choice= welcomeGame();    switch (choice)    &#123;    case 1:        //printf(&quot;开始游戏&quot;);        printMap();//打印地图        //showScoreTips();//显示提示信息        initSnake();//初始化蛇        randFood();//随机食物        //通过按键实现蛇的移动        moveKeyControl();        break;    case 2:        aboutGame();        break;    case 3:        //printf(&quot;退出游戏&quot;);        //系统提供的函数 退出程序        exit(0);        break;    default:        setColor(12);        gotoXY(45, 28);        printf(&quot;输入非法，按下回车键继续。&quot;);        //按任意键        getchar();    &#125;    //按下回车键继续    getchar();&#125;system(&quot;pause&quot;);return 0;</code></pre><p>}</p><p>&#x2F;&#x2F;设置文本的颜色<br>int setColor(int c)<br>{<br>    SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE),c);<br>    return 0;<br>}</p><p>&#x2F;&#x2F;设置光标的位置<br>int gotoXY(int x, int y)<br>{<br>    &#x2F;&#x2F;坐标结构体类型<br>    COORD c;<br>    &#x2F;&#x2F;横坐标 纵坐标<br>    c.X &#x3D; x;<br>    c.Y &#x3D; y;</p><pre><code>//STD_OUTPUT_HANDLE 表示标准输出//GetStdHandle(STD_OUTPUT_HANDLE) 获取当前标准输出句柄//c 坐标值SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), c);return 0;</code></pre><p>}</p><p>&#x2F;&#x2F;绘制字符画-蛇<br>int printfsnake(void)<br>{<br>    &#x2F;&#x2F;清屏<br>    system(“cls”);</p><pre><code>gotoXY(35, 1);setColor(6);printf(&quot;/^\\/^\\&quot;); //蛇眼睛gotoXY(34,2);printf(&quot;|__|  o|&quot;); //蛇眼睛gotoXY(33, 2);setColor(2);printf(&quot;_&quot;); gotoXY(25,3);setColor(12);printf(&quot;\\/&quot;); //蛇信gotoXY(31, 3);setColor(2);printf(&quot;/&quot;); gotoXY(37,31);setColor(6);printf(&quot;\\_/&quot;); //蛇眼睛gotoXY(41, 3);setColor(10);printf(&quot;\\&quot;); gotoXY(26,4);setColor(12);printf(&quot;\\___&quot;); //舌头gotoXY(32,4);printf(&quot;________/&quot;); gotoXY(31,4);setColor(2);printf(&quot;|&quot;); gotoXY(43,4);setColor(10);printf(&quot;\\&quot;); gotoXY(32,5);setColor(2);printf(&quot;\\______&quot;); //蛇嘴gotoXY(44,5);setColor(10);printf(&quot;\\&quot;); gotoXY(39,6);printf(&quot;|      |               \\&quot;); //下面是蛇身gotoXY(38,7);printf(&quot;/      /                 \\&quot;);gotoXY(37,8);printf(&quot;/      /                  \\ \\&quot;);gotoXY(35,9);printf(&quot;/      /                     \\  \\&quot;);gotoXY(34,10);printf(&quot;/      /                        \\  \\&quot;);gotoXY(33,11);printf(&quot;/      /            _----_         \\  \\&quot;);gotoXY(32,12);printf(&quot;/      /          _-~    ~-_          |   |&quot;);gotoXY(31,13);printf(&quot;(      (        _-~  _--_   ~-_       _/    |&quot;);gotoXY(32, 14);printf(&quot;\\      ~-___-~    _-~   ~-_    ~~_~~      /&quot;);gotoXY(33, 15);printf(&quot;~-_           _-~         ~-_        _-~&quot;);gotoXY(35,16);printf(&quot;~--______-~                ~-___-~&quot;);return 0;</code></pre><p>}</p><p>int welcomeGame()<br>{<br>    printfsnake();</p><pre><code>setColor(11);gotoXY(45,18);printf(&quot;欢迎来到贪吃蛇游戏!&quot;);int i, j;int choice;//绘制边框setColor(14);//控制行for (i = 20; i &lt;= 26; i++)&#123;    //控制列    for (j = 27; j &lt;= 74; j++)    &#123;        //输出上下边框        if (i == 20 || i == 26)        &#123;            gotoXY(j, i);            printf(&quot;-&quot;);        &#125;        //输出左右边框        if (j == 27 || j == 74)        &#123;            gotoXY(j, i);            printf(&quot;|&quot;);        &#125;        else            printf(&quot; &quot;);    &#125;&#125;//输出菜单选项//设置文本属性setColor(12);gotoXY(35, 22);printf(&quot;1.开始游戏&quot;);gotoXY(55, 22);printf(&quot;2.游戏说明&quot;);gotoXY(35, 24);printf(&quot;3.退出游戏&quot;);gotoXY(27, 27);printf(&quot;请选择[1,2,3]:&quot;);scanf(&quot;%d&quot;, &amp;choice);return choice;</code></pre><p>}</p><p>int aboutGame(void)<br>{<br>    int i &#x3D; 0,j &#x3D; 0;</p><pre><code>//清屏system(&quot;cls&quot;);//输出标题setColor(13);gotoXY(44,3);printf(&quot;游戏说明&quot;);//输出边框//控制行for (i = 6; i &lt;= 22; i++)&#123;    //控制列    for (j = 20; j &lt;= 75; j++)    &#123;        //上下边框        if (i == 6 || i == 22)        &#123;            gotoXY(j, i);            printf(&quot;=&quot;);        &#125;        //左右边框        if (j == 20 || j == 75)        &#123;            gotoXY(j, i);            printf(&quot;|&quot;);        &#125;        else            printf(&quot; &quot;);//输出空格    &#125;&#125;//输出菜单选项setColor(3);gotoXY(30, 8);printf(&quot;1.不能撞到墙，不能吃到自己&quot;);setColor(5);gotoXY(30, 11);printf(&quot;2.F1加速前进，F2减速前进&quot;);setColor(11);gotoXY(30, 14);printf(&quot;3.使用空格键暂停游戏或继续游戏&quot;);setColor(13);gotoXY(30, 17);printf(&quot;4.使用方向键控制前进的方向&quot;);setColor(14);gotoXY(30, 20);printf(&quot;5.按下ESC键退出游戏&quot;);setColor(12);gotoXY(20,24);printf(&quot;按下回车键回到主界面&quot;);getchar();//按下回车键继续return 0;</code></pre><p>}</p><p>int printMap(void)<br>{<br>    int i &#x3D; 0, j &#x3D; 0;<br>    &#x2F;&#x2F;清屏<br>    system(“cls”);</p><pre><code>//控制行for (i = 0; i &lt;= 26; i++)&#123;    //控制列    for (j = 0; j &lt;= 56; j=j+2)    &#123;        //控制光标        gotoXY(j, i);        if (0 == i || 26 == i || 0 == j || 56 == j)        &#123;            setColor(13);            printf(&quot;□&quot;);        &#125;        else        &#123;            setColor(3);            printf(&quot;■&quot;);//■        &#125;    &#125;&#125;//getchar();//按下回车键继续return 0;</code></pre><p>}</p><p>&#x2F;&#x2F;显示分数和提示信息<br>int showScoreTips(void)<br>{<br>    int highscore &#x3D; 0;</p><pre><code>//从文件中读取最高分highscore = readFile();//显示最高分setColor(3);gotoXY(64, 4);printf(&quot;※※历史最高分※※：%d&quot;,highscore);//显示当前得分setColor(14);gotoXY(64, 8);printf(&quot;※※当前得分※※：%d&quot;,score);//显示温馨提示setColor(12);gotoXY(72, 11);printf(&quot;温馨提示&quot;);//绘制上下边框setColor(10);gotoXY(60, 13);printf(&quot;==============================&quot;);gotoXY(60, 25);printf(&quot;==============================&quot;);//输出温馨提示setColor(13);gotoXY(64, 14);printf(&quot;※ 吃掉每个食物得分：%d&quot;,add);gotoXY(64, 16);printf(&quot;※ 不能撞到墙壁，不能咬到自己&quot;);gotoXY(64, 18);printf(&quot;※ F1加速前进，F2减速前进&quot;);gotoXY(64, 20);printf(&quot;※ 按下空格暂停游戏或继续游戏&quot;);gotoXY(64, 22);printf(&quot;※ 使用←→↑↓控制前进的方向&quot;);gotoXY(64, 24);printf(&quot;※ 按下ESC退出游戏&quot;);//getchar();//按下回车键继续return 0;</code></pre><p>}</p><p>&#x2F;&#x2F;从save.txt文件中读取最高分<br>int readFile(void)<br>{<br>    int ret &#x3D; -1;<br>    char buf[32];</p><pre><code>FILE* fp = NULL;//1以只读的方式打开文件夹fp = fopen(&quot;save.txt&quot;, &quot;r&quot;);if (NULL == fp)&#123;    printf(&quot;fopen failed...\n&quot;);    return 0;&#125;//2读取文件内容memset(buf, 0, sizeof(buf));ret = fread(buf, sizeof(char), sizeof(buf), fp);if (ret &lt;= 0)&#123;    printf(&quot;fread failed...\n&quot;);    return 0;&#125;//3关闭文件fclose(fp);//atoi--&gt;将字符串数字转化为数字 “123”-&gt;123return atoi(buf);</code></pre><p>}</p><p>&#x2F;&#x2F;初始化蛇<br>int initSnake(void)<br>{<br>    &#x2F;&#x2F;system(“cls”);<br>    int i &#x3D; 0;</p><pre><code>snake_t * new = NULL;snake_t * tmp = NULL;//循环创造4个节点for (i = 0; i &lt; 4; i++)&#123;    //分配空间    new = malloc(sizeof(snake_t));    if (NULL == new)    &#123;        printf(&quot;malloc initSnake failed...\n&quot;);        return -1;    &#125;    memset(new, 0, sizeof(snake_t));    //赋值    new-&gt;x = 24 + i * 2;    new-&gt;y = 5;    //头插法    new-&gt;next = head;    head = new;&#125;//遍历链表tmp = head;while (tmp != NULL)&#123;    //设置蛇的颜色 14 黄色    setColor(14);    //定位光标    gotoXY(tmp-&gt;x, tmp-&gt;y);    if (tmp == head)    &#123;        printf(&quot;●&quot;); //●    &#125;    printf(&quot;★&quot;);//★    tmp = tmp-&gt;next;&#125;return 0;</code></pre><p>}</p><p>&#x2F;&#x2F;随机食物<br>int randFood(void)<br>{<br>    snake_t* tmp &#x3D; NULL;</p><pre><code>//随机的食物不能出现在墙壁上//随机的食物不能出现在蛇身上//随机的食物x坐标一定是偶数//分配空间foodNode = malloc(sizeof(snake_t));if (NULL == foodNode)&#123;    gotoXY(1, 28);    printf(&quot;malloc failed...&quot;);    return -1;&#125;memset(foodNode, 0, sizeof(snake_t));while (1)&#123;    while (1)    &#123;        //保证X坐标是偶数 同时不应该出现在墙上   坐标应为：（2,54）        foodNode-&gt;x = rand() % 53 + 2;        if (0 == foodNode-&gt;x % 2)            break;    &#125;    //y的坐标是（1,25）    foodNode-&gt;y = rand() % 25 + 1;    //食物没有在蛇身上    if (NULL == tmp)    &#123;        gotoXY(foodNode-&gt;x, foodNode-&gt;y);        setColor(12);        printf(&quot;●&quot;);        break;    &#125;    else    &#123;        continue;    &#125;&#125;//getchar();//按下回车键继续return 0;</code></pre><p>}</p><p>int moveSnake(void)<br>{<br>    snake_t* new &#x3D; NULL;<br>    snake_t* tmp &#x3D; NULL;<br>    snake_t* save &#x3D; NULL;</p><pre><code>new = malloc(sizeof(snake_t));if (NULL == new)&#123;    printf(&quot;malloc failed...\n&quot;);    return -1;&#125;memset(new, 0, sizeof(snake_t));//向上移动if (UP == direction)&#123;    new-&gt;x = head-&gt;x;    new-&gt;y = head-&gt;y - 1;&#125;//向下移动if (DOWN == direction)&#123;    new-&gt;x = head-&gt;x;    new-&gt;y = head-&gt;y + 1;&#125;//向右移动if (RIGHT == direction)&#123;    new-&gt;x = head-&gt;x + 2;    new-&gt;y = head-&gt;y;&#125;//向左移动if (LEFT == direction)&#123;    new-&gt;x = head-&gt;x - 2;    new-&gt;y = head-&gt;y;&#125;new-&gt;next = head;head = new;tmp = head;setColor(14);//判断是否为食物if ((new-&gt;x == foodNode-&gt;x) &amp;&amp; (new-&gt;y == foodNode-&gt;y))&#123;    //循环画出蛇    while (NULL != tmp) &#123;        gotoXY(tmp-&gt;x, tmp-&gt;y);        if (tmp == head)            printf(&quot;●&quot;);        else            printf(&quot;★&quot;);        tmp = tmp-&gt;next;    &#125;    //吃掉一个食物 增加分数    score = score + add;    //再随机食物    randFood();&#125;else&#123;    while (NULL != tmp-&gt;next)    &#123;        gotoXY(tmp-&gt;x, tmp-&gt;y);        if (tmp == head)            printf(&quot;●&quot;);        else            printf(&quot;★&quot;);        save = tmp;        tmp = tmp-&gt;next;    &#125;    //将最后一个节点释放    gotoXY(tmp-&gt;x, tmp-&gt;y);    setColor(3);    printf(&quot;■&quot;);    save-&gt;next = NULL;    free(tmp);&#125;return 0;</code></pre><p>}</p><p>int moveKeyControl(void)<br>{<br>    direction &#x3D; RIGHT;</p><pre><code>while (1)&#123;    showScoreTips();    //向上    if (GetAsyncKeyState(VK_UP) &amp;&amp; direction != DOWN)    &#123;        direction = UP;    &#125;    //向下    if (GetAsyncKeyState(VK_DOWN) &amp;&amp; direction != UP)    &#123;        direction = DOWN;    &#125;    //向左    if (GetAsyncKeyState(VK_LEFT) &amp;&amp; direction != RIGHT)//GetAsyncKeyState获取键盘输入信息    &#123;        direction = LEFT;    &#125;    //向右    if (GetAsyncKeyState(VK_RIGHT) &amp;&amp; direction != LEFT)    &#123;        direction = RIGHT;    &#125;    //按下空格键暂停游戏或继续游戏    if (GetAsyncKeyState(VK_SPACE))    &#123;        while (1)        &#123;            Sleep(300);            if (GetAsyncKeyState(VK_SPACE))                break;        &#125;    &#125;    //按下F1键加速    if (GetAsyncKeyState(VK_F1))    &#123;        //减少睡眠的时间 但睡眠时间不少于50ms        speedUp();    &#125;    //按下F2键加速    if (GetAsyncKeyState(VK_F2))    &#123;        //增加睡眠的时间 但睡眠时间不大于350ms        speedDown();    &#125;    //按下ESC键结束游戏    if (GetAsyncKeyState(VK_ESCAPE))    &#123;        //表示用户按下ESC键结束游戏        endStatus = 3;        endGame();        //exit(1);        break;    &#125;    Sleep(sleepTime);    moveSnake();    //判断是否撞到墙    if (isHitWall())    &#123;        endStatus = 1;        endGame();        break;    &#125;    //判断是否咬到自己    if (isBitSelf())    &#123;        endStatus = 2;        endGame();        break;    &#125;&#125;getchar();return 0;</code></pre><p>}</p><p>&#x2F;&#x2F;加速蛇的移动<br>int speedUp(void)<br>{<br>    &#x2F;&#x2F;最快的速度 睡眠时间50ms<br>    while (sleepTime &gt; 50)<br>    {<br>        sleepTime &#x3D; sleepTime - 20;<br>        add &#x3D; add + 2;<br>    }</p><pre><code>return 0;</code></pre><p>}</p><p>&#x2F;&#x2F;减速蛇的移动<br>int speedDown(void)<br>{<br>    if (sleepTime &lt; 350)<br>    {<br>        sleepTime &#x3D; sleepTime + 20;<br>        &#x2F;&#x2F;减少增加的分数<br>        add &#x3D; add - 2;<br>    }</p><pre><code>if (add &lt;= 0)&#123;    add = 1;&#125;return 0;</code></pre><p>}</p><p>&#x2F;&#x2F;判断是否撞墙 撞墙返回1 否则返回0<br>int isHitWall()<br>{<br>    &#x2F;&#x2F;表示撞到墙壁<br>    if (head-&gt;x &#x3D;&#x3D; 0 || head-&gt;x &#x3D;&#x3D; 56 || head-&gt;y &#x3D;&#x3D; 0 || head-&gt;y &#x3D;&#x3D; 26)<br>    {<br>        return 1;<br>    }</p><pre><code>//表示没有撞到墙壁return 0;</code></pre><p>}</p><p>&#x2F;&#x2F;判断是否咬到自己 咬到自己返回1 否则返回0<br>int isBitSelf()<br>{<br>    snake_t* tmp &#x3D; NULL;</p><pre><code>//从第二个节点开始算tmp = head-&gt;next;while (NULL != tmp)&#123;    if ((head-&gt;x == tmp-&gt;x) &amp;&amp; (head-&gt;y == tmp-&gt;y))    &#123;        return 1;    &#125;    //指向下一个节点    tmp = tmp-&gt;next;&#125;return 0;</code></pre><p>}</p><p>&#x2F;&#x2F;游戏失败边框<br>void failGameUi()<br>{<br>    int i &#x3D; 0;</p><pre><code>//清屏system(&quot;cls&quot;);//显示游戏失败提示setColor(12);gotoXY(44, 3);printf(&quot;游 戏 失 败！&quot;);//设置边框的颜色setColor(11);gotoXY(17, 5);//绘制上边框printf(&quot;+----------------------------------------------------------------+&quot;);//绘制下边框gotoXY(17, 20);printf(&quot;+----------------------------------------------------------------+&quot;);//绘制左右边框for(i = 6; i &lt;= 19; i++)&#123;    gotoXY(17, i);    printf(&quot;|&quot;);    gotoXY(82, i);    printf(&quot;|&quot;);&#125;</code></pre><p>}</p><p>&#x2F;&#x2F;结束游戏<br>int endGame(void)<br>{<br>    int n;<br>    int highScore &#x3D; 0;</p><pre><code>while (1)&#123;    //显示游戏失败界面    failGameUi();    setColor(12);    gotoXY(38, 9);    //不同的状态 显示不同的失败提示 endStatus    switch (endStatus)    &#123;        //撞到墙壁    case 1:        printf(&quot;您撞到墙壁了，游戏结束！&quot;);        break;        //咬到自己    case 2:        printf(&quot;您咬到蛇身了，游戏结束！&quot;);        break;        //按下ESC键    case 3:        printf(&quot;您已经结束了游戏，游戏结束！&quot;);        break;    default:        break;    &#125;    //显示您的得分    setColor(13);    gotoXY(43, 12);    printf(&quot;您的得分：%d&quot;, score);    //显示最高分    //从文件中读取最高分    highScore = readFile();    if (score &gt; highScore)    &#123;        setColor(10);        gotoXY(38, 16);        printf(&quot;恭喜您，您已经破纪录了！&quot;);        //将最高分写入文件        writeFile(score);    &#125;    else    &#123;        setColor(10);        gotoXY(38, 16);        printf(&quot;加油哦，离最高分还差%d分&quot;, highScore - score);    &#125;    //输出用户选择的信息    gotoXY(25, 23);    setColor(12);    printf(&quot;再玩一局请输入：1&quot;);    gotoXY(52, 23);    printf(&quot;直接退出请输入：2&quot;);    gotoXY(46, 25);    setColor(11);    printf(&quot;请选择：&quot;);    scanf(&quot;%d&quot;, &amp;n);    getchar();    if (n == 1)    &#123;        score = 0;        sleepTime = 350;        add = 1;        destorySnake();        break;    &#125;    else if(n==2)    &#123;        exit(0);    &#125;    else    &#123;        setColor(12);        gotoXY(30, 27);        printf(&quot;您输入有误，请重新输入，按下回车继续...&quot;);        getchar();        //system(&quot;cls&quot;);    &#125;&#125;return 0;</code></pre><p>}</p><p>int writeFile(int score)<br>{<br>    FILE* fp &#x3D; NULL;</p><pre><code>//打开文件fp = fopen(&quot;save.txt&quot;, &quot;w+&quot;);if (NULL == fp)&#123;    printf(&quot;打开文件失败\n&quot;);    return -1;&#125;//将最高分写入文件中fprintf(fp, &quot;%d&quot;, score);//关闭文件fclose(fp);return 0;</code></pre><p>}</p><p>int destorySnake(void)<br>{<br>    snake_t* tmp &#x3D; NULL;<br>    snake_t* save &#x3D; NULL;</p><pre><code>tmp = head;while (NULL != tmp)&#123;    save = tmp-&gt;next;    free(tmp);    tmp = save;&#125;head = NULL;return 0;</code></pre><p>}</p><h2 id="End-By-siren"><a href="#End-By-siren" class="headerlink" title="End! By siren."></a>End! By siren.</h2>]]></content>
      
      
      <categories>
          
          <category> c/c++ </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2023/02/08/2023-2-8-%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2023/02/08/2023-2-8-%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我的第一篇文章"><a href="#这是我的第一篇文章" class="headerlink" title="这是我的第一篇文章"></a>这是我的第一篇文章</h2><p>let me begin<br>this is my first blog<br>i just want to have a try<br>so…<br>let us go!</p>]]></content>
      
      
      <categories>
          
          <category> 随想 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
